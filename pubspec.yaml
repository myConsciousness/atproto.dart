name: atproto_dart
publish_to: none

environment:
  sdk: ">=3.8.0 <4.0.0"

workspace:
  - packages/at_identifier
  - packages/at_uri
  - packages/atproto
  - packages/atproto_core
  - packages/atproto_oauth
  - packages/atproto_test
  - packages/bluesky
  - packages/bluesky_cli
  - packages/bluesky_text
  - packages/did_plc
  - packages/lexicon
  - packages/multiformats
  - packages/nsid
  - packages/xrpc

dependencies:
  github: ^9.12.0
  http: ^1.4.0
  pubspec: ^2.3.0
  test: ^1.26.2
  lexicon: ^1.0.0
  lex_gen:
    path: packages/lex_gen

dev_dependencies:
  lints: ^6.0.0
  melos: ^7.1.0
  import_sorter: ^4.6.0

melos:
  scripts:    
    setup:
      run: |
        melos get
        melos build
      description: Set up the atproto.dart project when cloned. Run `dart pub get` and `dart run build_runner build` in all Dart packages.

    get:
      run: melos exec -c 20 -- \
            dart pub get
      description: Run `dart pub get` command in all packages.

    analyze:
      run: |
        melos exec -c 20 -- \
          flutter analyze .
      description: |
        Run `dart analyze` in all packages.
        - Note: you can also rely on your IDEs Dart Analysis / Issues window.

    fmt:
      run: |
        melos exec -c 20 -- dart run import_sorter:main
        melos exec -c 20 -- dart format .
      description: Run `dart format` and `dart run import_sorter:main` in all packages.

    build:
      run: |
        melos exec --depends-on="build_runner" -c 20 -- \
          dart run build_runner build clean
        melos exec --depends-on="build_runner" -c 1 -- \
          dart run build_runner build --delete-conflicting-outputs
      description: Run `dart run build_runner build` in all packages.

    test:
      run: melos exec --fail-fast --ignore="*bluesky_clu*" --ignore="*atproto_test*" --ignore="*atproto_oauth*" -- "\$MELOS_ROOT_PATH/.github/scripts/coverage.sh"
      description: Run all Dart tests in this project.
      flutter: false
      dir-exists: test

    publish_all:
      run: |
        melos publish
        melos publish --no-dry-run --git-tag-version
        git push origin --tags
      description: Publish all packages, create git tags and push them to origin.

    gen:
      run: |
        dart run ./bin/gen_lexicon_ids.dart
        dart run ./bin/gen_codes.dart
        cd packages/atproto
        dart run build_runner build --delete-conflicting-outputs
        dart fix --apply
        cd ../../packages/bluesky
        dart run build_runner build --delete-conflicting-outputs
        dart fix --apply
        cd ../../packages/bluesky_cli
        dart fix --apply
        cd ../../
        melos fmt
      description: Generate code for atproto and blueksy based on lexicons.